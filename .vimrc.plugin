runtime macros/matchit.vim

" OS Dependant things

let s:running_windows = has("win16") || has("win32") || has("win64")

if s:running_windows
  let g:ctrlp_cache_dir = $HOME.'/vimfiles/ctrlp_cache'
else
  let g:ctrlp_cache_dir = $HOME.'/.vim/ctrlp_cache'
endif

let g:airline_powerline_fonts = 1

" ==================================
" ==============*CTRLP*=============
" ==================================
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_match_window_bottom = 1
let g:ctrlp_match_window_reversed = 1
let g:ctrlp_max_height = 30
let g:ctrlp_max_files = 100000
let g:ctrlp_max_depth = 100
let g:ctrlp_follow_symlinks = 0
let g:ctrlp_custom_ignore = {
      \ 'dir':  '\v[\/]\.(git|hg|svn)|(node_modules|bower_components|target|dist|build)$',
      \ 'file': '\v\.(exe|so|dll|min.js|css|map)$',
      \ 'link': 'some_bad_symbolic_links',
      \ }


" ==================================
" =============*TagBar*=============
" ==================================

let g:tagbar_left = 0
let g:tagbar_ctags_bin = 'ctags'
" requires gotags in path
" go get -u github.com/jstemmer/gotags
let g:tagbar_type_go = {
      \ 'ctagstype' : 'go',
      \ 'kinds'     : [
      \ 'p:package',
      \ 'i:imports:1',
      \ 'c:constants',
      \ 'v:variables',
      \ 't:types',
      \ 'n:interfaces',
      \ 'w:fields',
      \ 'e:embedded',
      \ 'm:methods',
      \ 'r:constructor',
      \ 'f:functions'
      \ ],
      \ 'sro' : '.',
      \ 'kind2scope' : {
      \ 't' : 'ctype',
      \ 'n' : 'ntype'
      \ },
      \ 'scope2kind' : {
      \ 'ctype' : 't',
      \ 'ntype' : 'n'
      \ },
      \ 'ctagsbin'  : 'gotags',
      \ 'ctagsargs' : '-sort -silent'
      \ }

" ==================================
" ===============*NOTE*=============
" ==================================
let g:notes_directories = ['~/.notes']


" ==================================
" ===========*Syntastic*============
" ==================================
let g:syntastic_enable_highlighting = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = 'E'
let g:syntastic_style_error_symbol = 'S'
let g:syntastic_warning_symbol = 'W'
let g:syntastic_style_warning_symbol = 'S'
let g:syntastic_always_populate_loc_list = 1

let g:syntastic_javascript_checkers = ['jshint', 'eslint']
let g:syntastic_always_populate_loc_list = 1


" ==================================
" ============*TagBar*==============
" ==================================
let g:tagbar_sort = 0
let g:tagbar_compact = 1
let g:tagbar_autoshowtag = 1
let g:tagbar_width = 40
let g:tagbar_iconchars = ['+', '-']

let g:ack_default_options = " -s -i -H --nocolor --nogroup --column"

let g:html_indent_inctags='html,body,head,tbody'

" ==================================
" ============*NERDTree*============
" ==================================

let NERDTreeMapOpenInTab='<Leader>n'
let NERDTreeIgnore = ['\.beam$', '\.pyc$', 'ebin$', '^bin$', '^pkg$', '\.so$', '\.dll$', '\tags$']
let g:NERDTreeWinSize = 40


" ==================================
" ===========*EasyMotion*===========
" ==================================
"
let g:EasyMotion_smartcase = 1

" ==================================
" ===========*WebDevIcons*==========
" ==================================
"
let g:WebDevIconsNerdTreeAfterGlyphPadding = '  '
